/**
 * Visual Flow Editor translations for English
 */

export const visualFlowEditorTranslations = {
  'visualFlowEditor.title': 'Visual Flow Editor',
  'visualFlowEditor.addBlock': 'Add Block',
  'visualFlowEditor.deleteBlock': 'Delete Block',
  'visualFlowEditor.moveUp': 'Move Up',
  'visualFlowEditor.moveDown': 'Move Down',
  'visualFlowEditor.duplicate': 'Duplicate',
  'visualFlowEditor.cut': 'Cut',
  'visualFlowEditor.copy': 'Copy',
  'visualFlowEditor.paste': 'Paste',
  'visualFlowEditor.undo': 'Undo',
  'visualFlowEditor.redo': 'Redo',
  'visualFlowEditor.search': 'Search',
  'visualFlowEditor.searchPlaceholder': 'Search blocks...',
  'visualFlowEditor.noResults': 'No results found',
  'visualFlowEditor.validation.error': 'Validation error',
  'visualFlowEditor.validation.askAfterMenu': 'ASK block cannot follow directly after MENU block',
  'visualFlowEditor.validation.menuAfterAsk': 'MENU block cannot follow directly after ASK block',
  'visualFlowEditor.validation.consecutiveAsk': 'Consecutive ASK blocks are not allowed',
  'visualFlowEditor.validation.buildInsideContainer': 'BUILD block cannot be nested inside another container block',
  'visualFlowEditor.validation.flightInsideContainer': 'FLIGHT block cannot be nested inside another container block',
  'visualFlowEditor.validation.invalidPosition': 'Invalid position for this block',
  'visualFlowEditor.validation.missingRequired': 'Missing required fields',
  'visualFlowEditor.dragDrop.hint': 'Drag blocks to reorder',
  'visualFlowEditor.container.then': 'Then',
  'visualFlowEditor.container.else': 'Else',
  'visualFlowEditor.container.empty': 'Empty container',
  'visualFlowEditor.block.command': 'Command',
  'visualFlowEditor.block.condition': 'Condition',
  'visualFlowEditor.block.container': 'Container',
  'visualFlowEditor.block.special': 'Special',
  'visualFlowEditor.save': 'Save',
  'visualFlowEditor.cancel': 'Cancel',
  'visualFlowEditor.confirmDelete': 'Are you sure you want to delete this block?',
  'visualFlowEditor.unsavedChanges': 'You have unsaved changes',
  'visualFlowEditor.loadError': 'Error loading data',
  'visualFlowEditor.saveSuccess': 'Changes saved successfully',
  'visualFlowEditor.saveError': 'Error saving changes',
} as const;